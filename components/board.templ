package components

import (
    "gokanban/structs/board"
	"gokanban/structs/project"
    "gokanban/structs/column"
	"fmt"
	"gokanban/structs/projectitem"
)

templ Kanban(p project.ProjectViewModel) {
    <html>
        <head>
            <link rel="stylesheet" href="/static/style.css" />
            <script src="/static/htmx.min.js"></script>
            <script src="https://cdn.jsdelivr.net/npm/sortablejs@latest/Sortable.min.js"></script>
        </head>
        <body hx-boost="true">
            @Boards(p)
        </body>
    </html>
}

templ Boards(p project.ProjectViewModel) {
    <main>
        <h1>{ p.Title }</h1>
        <div class="boards">
            for i, b := range p.Boards {
                @Board(b, i)            
            }
        </div>
    </main>    
}

templ Board(b board.BoardViewModel, i int) {
    <details open class="board">
        <summary class="board_summary">
            { b.Title }
        </summary>
        <div class="details_content">
            @Columns(b)
        </div>
    </details>
}

templ Columns(b board.BoardViewModel) {
    <ol class="columns">
        for i, col := range b.Columns {
            <li>
                @Column(col, i)
            </li>
        }
    </ol>
}

templ Column(col column.ColumnViewModel, i int) {
    <div class={ getColumnStyle(col) }>
        <h3>{ col.Title }</h3>
        @ProjectItems(col, i)
    </div>
}

templ ProjectItems(col column.ColumnViewModel, i int) {
    <ol class="projectitems_list">
        for _, p := range col.ProjectItems {
            @ProjectItem(p, false)
        }
    if i == 0 {
        <button
            hx-get={ fmt.Sprintf("/projectitem/%s/new", col.Id) } 
            hx-swap="outerHTML">
            @Plus()
        </button>
    }
    </ol>
}

templ ProjectItem(p projectitem.ProjectItemViewModel, isHXRequest bool) {
    <div class="projectitem">
        <h3>{ p.Title }</h3>
        if len(p.Description) > 0 {
            <p>{ p.Description }</p>
        }
        <p>Time estimated: { p.EstimatedTime }</p>
        <p>Time spent: { p.SpentTime }</p>
    </div>
    if isHXRequest {
        <button
            id="createprojectitem"
            hx-get={ fmt.Sprintf("/projectitem/%s/new", p.ColumnId) }
            hx-swap="outerHTML">
            @Plus()
        </button>
    }
}

templ CreateProjectItem(id string) {
    <form id="createprojectitem"
        class="projectitem" 
        hx-post={ fmt.Sprintf("/projectitem/%s/new", id) } 
        hx-swap="outerHTML">
        Tittel: <input type="text" name="title" />
        Beskrivelse: <textarea name="description" cols="10" rows="5"></textarea>
        Estimert tidsbruk: <input type="number" name="estimatedtime" />
        <button type="submit">Opprett</button>
    </form>
}

func getColumnStyle(c column.ColumnViewModel) string {
    switch c.ColumnType {
        case 0:
            return "column column_nil"
        case 1:
            return "column column_one"
        default:
            return "column column_two"
    }
}